# Project name for Docker Compose (used as a prefix for container names)
COMPOSE_PROJECT_NAME=safe-companions
# Flask entry point
FLASK_APP=app.py
# Flask environment: development or production
FLASK_ENV=development
# PostgreSQL connection URL (update password/host as needed)
DATABASE_URL=postgresql://<username>:<password>@<host>:<port>/<database>
DATABASE_USERNAME=<username>
DATABASE_PASSWORD=<password>
DATABASE_NAME=<database_name>
DATABASE_HOST=<db>
# Internal port (not the mapped host port)
DATABASE_PORT=<port>

# Database SSL Configuration (Security Enhancement)
# SSL Mode: disable, allow, prefer, require, verify-ca, verify-full
# - disable: No SSL (NOT RECOMMENDED for production)
# - allow: Try SSL, fallback to non-SSL
# - prefer: Try SSL, fallback to non-SSL (default for development)
# - require: Require SSL connection (default for production)
# - verify-ca: Require SSL and verify certificate authority
# - verify-full: Require SSL and verify hostname matches certificate
DATABASE_SSL_MODE=require

# SSL Certificate Configuration (Optional - for client certificate authentication)
# DATABASE_SSL_CERT=/path/to/client-cert.pem
# DATABASE_SSL_KEY=/path/to/client-key.pem
# DATABASE_SSL_CA=/path/to/ca-cert.pem

# Security Keys (REQUIRED - Generate secure random values)
# Note: In CI/CD environments (CI=true), test values are automatically used
FLASK_SECRET_KEY=<your-flask-secret-key-here>
CSRF_SECRET_KEY=<your-csrf-secret-key-here>

# reCAPTCHA Configuration (REQUIRED - Get from Google reCAPTCHA Console)
# Note: In CI/CD environments (CI=true), Google test keys are automatically used
SITEKEY=<your-recaptcha-site-key>
RECAPTCHA_SECRET_KEY=<your-recaptcha-secret-key>

# Test password for development (optional, defaults to 'password123')
TEST_PASSWORD=password123

# Email Configuration (Optional - required only if using email features)
SMTP_SERVER=<smtp.gmail.com>
SMTP_PORT=587
SMTP_USERNAME=<your-email@gmail.com>
SMTP_PASSWORD=<your-app-password>

# Deployment Configuration
CERTBOT_EMAIL=<email>
NGINX_CONF_FILE=<nginx_config_file_name>
REQ_FILE=<python_flask_dependencies_requirements_file>