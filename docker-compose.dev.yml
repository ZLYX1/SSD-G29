services:
  web:
    container_name: safe-companions-web-dev
    build:
      context: .
      dockerfile: Dockerfile
      args:
        REQ_FILE: requirements.txt  # Use development requirements
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      # Google reCAPTCHA - loaded from .env file
      - SITEKEY=${SITEKEY}
      - RECAPTCHA_SECRET_KEY=${RECAPTCHA_SECRET_KEY}
      # AWS - loaded from .env file
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      # Secret keys - loaded from .env file
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY}
      - CSRF_SECRET_KEY=${CSRF_SECRET_KEY}
    ports:
      - "5000:5000"  # Expose Flask directly for development
    depends_on:
      - db
    volumes:
      - .:/app  # Live sync for development
      - /app/__pycache__  # Exclude pycache from sync
    networks:
      - dev-network
    restart: unless-stopped

  db:
    container_name: safe-companions-db-dev
    image: postgres:15-alpine  # Lighter image for development
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"  # Direct access for development tools
    volumes:
      # Use named volume for persistence
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ssd_user -d ssd_database"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: pgAdmin for database management
  pgadmin:
    container_name: safe-companions-pgadmin-dev
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@ssd.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - dev-network
    restart: unless-stopped

volumes:
  postgres_dev_data:

networks:
  dev-network:
    driver: bridge
