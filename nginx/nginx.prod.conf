server {
    listen 80;
    server_name safecompanion.ddns.net;

    # Allow Let's Encrypt ACME challenge.
    location ~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name safecompanion.ddns.net;

    # SSL certificate paths (adjust if needed)
    ssl_certificate /etc/letsencrypt/live/safecompanion.ddns.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/safecompanion.ddns.net/privkey.pem;

    # Strong SSL settings (optional but recommended)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # Add HSTS header
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Security headers to prevent common attacks
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self';
        script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://www.google.com https://www.gstatic.com;
        style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com;
        font-src 'self' https://cdnjs.cloudflare.com;
        img-src https://sitssd.s3.amazonaws.com data:;
        connect-src https://sitssd.s3.amazonaws.com;
        frame-src https://www.google.com;" always;

    # Proxy requests to Flask app running in Docker.
    location / {
        proxy_pass http://web:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}